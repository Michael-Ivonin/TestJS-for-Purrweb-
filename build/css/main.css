a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,main,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}[hidden]{display:none}body{line-height:1;height:100vh;background:#020024;background:radial-gradient(circle,#020024 4%,#090d79 68%,#00d4ff 100%)}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}.container{max-width:1270px;height:100%;margin:auto;padding:15px;display:flex;justify-content:center;align-items:center}.slider{display:grid;grid-template-areas:"button-previous top button-next" ". bottom ."}.slider__button{font-size:30px;color:#fff;background-color:transparent;border:none;outline:0}.slider__button:hover{cursor:pointer;color:wheat}.slider__button:active{position:relative;top:2px}.slider__button-previous{transform:rotateY(180deg);grid-area:button-previous}.slider__button-next{grid-area:button-next}.slider__screen{width:400px;height:300px;overflow:hidden;border-radius:4px;grid-area:top}.slider__box{width:9999px;font-size:0;margin-left:-400px}.slider__item{display:inline-flex;justify-content:center;align-items:center;width:400px;height:300px;background-color:#faebd7}.slider__dot:hover,.slider__dot_active{background-color:wheat}.slider__item-heading{font-size:40px;color:#020024}.slider__dots{font-size:0;grid-area:bottom;margin-top:15px;width:100%;display:inline-flex;justify-content:space-evenly}.slider__dot{display:inline-flex;width:10px;height:10px;border:2px solid #fff;border-radius:50%}.slider__dot:hover{cursor:pointer}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
